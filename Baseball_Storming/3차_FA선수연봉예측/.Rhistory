library(glmnet)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_P3)[,-1]
y <- baseball_P3$period
set.seed(1)
train = sample(1:nrow(baseball_P3),20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAP2 <- function(FA) {
d <- with(FA, b[1] + tWAR * b[2] + WAR * b[3] + age * b[4] + G * b[5] + CG * b[6] + SHO * b[7] + SP * b[8] + W * b[9] + L * b[10] + S * b[11] + H * b[12] + IP * b[13] + R * b[14] + ER * b[15] + PA * b[16] + X1B * b[17] + X2B * b[18] + X3B * b[19] + HR * b[20] + BB * b[21] + IBB * b[22] + HBP * b[23] + SO * b[24] + BK * b[25] + WP * b[26] + ERA * b[27] + FIP * b[28] + WHIP * b[29] + ERA. * b[30] + FIP. * b[31]
)
}
FAPit2 <- FAP2(baseball_B1)
b
library(glmnet)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_P3)[,-1]
y <- baseball_P3$period
set.seed(1)
train = sample(1:nrow(baseball_P3),20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAP2 <- function(FA) {
d <- with(FA, b[1] + tWAR * b[2] + WAR * b[3] + age * b[4] + G * b[5] + CG * b[6] + SHO * b[7] + SP * b[8] + W * b[9] + L * b[10] + S * b[11] + H * b[12] + IP * b[13] + R * b[14] + ER * b[15] + PA * b[16] + X1B * b[17] + X2B * b[18] + X3B * b[19] + HR * b[20] + BB * b[21] + IBB * b[22] + HBP * b[23] + SO * b[24] + BK * b[25] + WP * b[26] + ERA * b[27] + FIP * b[28] + WHIP * b[29] + ERA. * b[30] + FIP. * b[31]
)
}
FAPit2 <- FAP2(baseball_P1)
FAPit2
Sys.setlocale("LC_ALL", "C")
getwd()
setwd("C:/Users/dlwog/Desktop")
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
baseball_P2 <- read.csv("FA1218P2.csv", header = TRUE)
baseball_B1 <- read.csv("FA1218B1.csv", header = TRUE)
baseball_P1 <- read.csv("FA1218P1.csv", header = TRUE)
normalize <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
normalize_baseball_B2 <- as.data.frame(lapply(baseball_B2,
normalize))
unnormalize <-  function(x) {
return((x * (max(baseball_B2$aincome)
- min(baseball_B2$aincome)))
+ min(baseball_B2$aincome))
}
set.seed(1)
strain <- sample(1:nrow(normalize_baseball_B2), 40)
stest <- (-strain)
training <- normalize_baseball_B2[strain,]
test <- normalize_baseball_B2[stest,]
summary(training$aincome)
summary(test$aincome)
library(neuralnet)
set.seed(1)
baseball_model <-  neuralnet(aincome ~ tWAR + WAR + age + Pscore
+ G + PA + AB + R + X1B
+ X2B + X3B + HR + TB + RBI
+ SB + CS + BB + HBP + IBB
+ SO + GDP + SH + SF + AVG
+ OBP + SLG + OPS + wOBA
+ wRC., data = training,
hidden = c(1,1))
set.seed(1)
model_results <-  compute(baseball_model, test[1:((ncol(test)) - 2)])
library(glmnet)
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_B3)[,-1]
y <- baseball_B3$period
set.seed(1)
train = sample(1:nrow(baseball_B3),40)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.4)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAB2 <- function(FA) {
d <- with(FA,
b[1]
+ b[3] * WAR + b[4] * age + b[5] * Pscore
+ b[7] * PA + b[12] * X3B
+ b[17] * CS + b[18] * BB
+ b[25] * AVG
)
}
FABat2 <- FAB2(baseball_B1)
FABat2
library(glmnet)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_P3)[,-1]
y <- baseball_P3$period
set.seed(1)
train = sample(1:nrow(baseball_P3),20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAP2 <- function(FA) {
d <- with(FA, b[1] + tWAR * b[2] + WAR * b[3] + age * b[4] + G * b[5] + CG * b[6] + SHO * b[7] + SP * b[8] + W * b[9] + L * b[10] + S * b[11] + H * b[12] + IP * b[13] + R * b[14] + ER * b[15] + PA * b[16] + X1B * b[17] + X2B * b[18] + X3B * b[19] + HR * b[20] + BB * b[21] + IBB * b[22] + HBP * b[23] + SO * b[24] + BK * b[25] + WP * b[26] + ERA * b[27] + FIP * b[28] + WHIP * b[29] + ERA. * b[30] + FIP. * b[31]
)
}
round(FABat2, 1)
round(FABat2)
FABat * round(FABat2)
FABat * round(FABat2)
round(FABat2)
library(glmnet)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
x <- model.matrix(aincome ~., baseball_B2)[,-1]
y <- baseball_B2$aincome
set.seed(1)
train = sample(1:nrow(baseball_B2),40)
test = (-train)
ytest = y[test]
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.3)
plot(cv.lasso$glmnet.fit, xvar="lambda", label=TRUE)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAB <- function(FA) {
d <- with(FA,
b[1]
+ b[2] * period + b[3] * tWAR + b[4] * WAR
+ b[5] * age + b[6] * Pscore
+ b[7] * G + b[10] * R
+ b[11] * X1B + b[12] * X2B
+ b[13] * X3B
+ b[14] * HR
+ b[15] * TB
+ b[17] * SB
+ b[18] * CS + b[19] * BB
+ b[20] * HBP + b[21] * IBB
+ b[22] * SO + b[23] * GDP
+ b[25] * SF + b[27] * OBP
)
}
FABat <- FAB(baseball_B1)
FABat
rm(list=ls())
Sys.setlocale("LC_ALL", "C")
getwd()
setwd("C:/Users/dlwog/Desktop")
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
baseball_P2 <- read.csv("FA1218P2.csv", header = TRUE)
baseball_B1 <- read.csv("FA1218B1.csv", header = TRUE)
baseball_P1 <- read.csv("FA1218P1.csv", header = TRUE)
library(glmnet)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
x <- model.matrix(aincome ~., baseball_B2)[,-1]
y <- baseball_B2$aincome
set.seed(1)
train = sample(1:nrow(baseball_B2),40)
test = (-train)
ytest = y[test]
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.4)
plot(cv.lasso$glmnet.fit, xvar="lambda", label=TRUE)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
b
FAB <- function(FA) {
d <- with(FA,
b[1]
+ b[2] * tWAR + b[3] * WAR
+ b[4] * age + b[5] * Pscore
+ b[6] * G + b[9] * R
+ b[10] * X1B + b[11] * X2B
+ b[12] * X3B
+ b[13] * HR
+ b[14] * TB
+ b[16] * SB
+ b[18] * BB + b[19] * HBP
+ b[20] * IBB + b[21] * SO
+ b[22] * GDP + b[24] * SF
+ b[26] * OBP
)
}
FABat <- FAB(baseball_B1)
FABat
baseball_P2 <- read.csv("FA1218P2.csv", header = TRUE)
x <- model.matrix(aincome ~., baseball_P2)[,-1]
y <- baseball_P2$aincome
set.seed(1)
train = sample(1:nrow(baseball_P2), 20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso2 <- cv.glmnet(x[train,], y[train], alpha = 1)
lasso.prediction2 = predict(cv.lasso2, s = cv.lasso2$lambda.min,
newx = x[test,])
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
b2 = predict(cv.lasso2, type = "coefficients",
s = cv.lasso2$lambda.min)
b2
FAP <- function(FA) {
d <- with(FA,
b2[1]
+ b2[3] * WAR + b2[4] * age + b2[9] * W
)
}
FAPit <- FAP(baseball_P1)
FAPit
library(glmnet)
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_B3)[,-1]
y <- baseball_B3$period
set.seed(1)
train = sample(1:nrow(baseball_B3),40)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.4)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAB2 <- function(FA) {
d <- with(FA,
b[1]
+ b[3] * WAR + b[4] * age + b[5] * Pscore
+ b[7] * PA + b[12] * X3B
+ b[17] * CS + b[18] * BB
+ b[25] * AVG
)
}
ã… 
b
FABat2 <- FAB2(baseball_B1)
FABat * round(FABat2)
library(glmnet)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_P3)[,-1]
y <- baseball_P3$period
set.seed(1)
train = sample(1:nrow(baseball_P3),20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAP2 <- function(FA) {
d <- with(FA, b[1] + tWAR * b[2] + WAR * b[3] + age * b[4] + G * b[5] + CG * b[6] + SHO * b[7] + SP * b[8] + W * b[9] + L * b[10] + S * b[11] + H * b[12] + IP * b[13] + R * b[14] + ER * b[15] + PA * b[16] + X1B * b[17] + X2B * b[18] + X3B * b[19] + HR * b[20] + BB * b[21] + IBB * b[22] + HBP * b[23] + SO * b[24] + BK * b[25] + WP * b[26] + ERA * b[27] + FIP * b[28] + WHIP * b[29] + ERA. * b[30] + FIP. * b[31]
)
}
FAPit2 <- FAP2(baseball_P1)
FAPit * round(FAPit2)
sort(FABat * round(FABat2))
order(FABat * round(FABat2))
FABat * round(FABat2)
Sys.setlocale("LC_ALL", "C")
getwd()
setwd("C:/Users/dlwog/Desktop")
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
baseball_P2 <- read.csv("FA1218P2.csv", header = TRUE)
baseball_B1 <- read.csv("FA1218B1.csv", header = TRUE)
baseball_P1 <- read.csv("FA1218P1.csv", header = TRUE)
normalize <- function(x) {
return((x - min(x)) / (max(x) - min(x)))
}
normalize_baseball_B2 <- as.data.frame(lapply(baseball_B2,
normalize))
unnormalize <-  function(x) {
return((x * (max(baseball_B2$aincome)
- min(baseball_B2$aincome)))
+ min(baseball_B2$aincome))
}
length(normalize_baseball_B2)
nrow(normalize_baseball_B2)
summary(training$aincome)
set.seed(1)
indexs <- sample(1:nrow(normalize_baseball_B2), 40)
training <- normalize_baseball_B2[indexs,]
test <- normalize_baseball_B2[-indexs,]
summary(training$aincome)
summary(test$aincome)
indexs = sample(1:nrow(baseball_B2), 40)
head(indexs)
set.seed(1)
indexs <- sample(1:nrow(baseball_B2), 40)
train <- baseball_B2[indexs,]
test <- (-indexs)
ytest = y[indexs]
library(glmnet)
baseball_B2 <- read.csv("FA1218B2.csv", header = TRUE)
x <- model.matrix(aincome ~., baseball_B2)[,-1]
y <- baseball_B2$aincome
set.seed(1)
indexs <- sample(1:nrow(baseball_B2), 40)
train <- baseball_B2[indexs,]
test <- (-indexs)
ytest = y[indexs]
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
set.seed(1)
indexs <- sample(1:nrow(baseball_B2), 40)
train <- baseball_B2[indexs,]
test <- (-indexs)
ytest = y[test]
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
model.matrix(aincome~., baseball_B2)
model.matrix(aincome~., baseball_B2)[,-1]
ttt <- model.matrix(aincome~., baseball_B2)
View(ttt)
View(x)
set.seed(1)
train = sample(1:nrow(baseball_B2),40)
test = (-train)
ytest = y[test]
for (i in 0:10) {
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.1*i)
lasso.coef = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
lasso.prediction = predict(cv.lasso, s = cv.lasso$lambda.min,
newx = x[test,])
lasso.coef
cv.lasso$lambda.min
c <- cor(lasso.prediction, ytest)
d <- sqrt((mean(lasso.prediction - ytest)^2))
print(c)
print(d)
print(0.1*i)
}
cv.lasso$lambda.1se
baseball_P2 <- read.csv("FA1218P2.csv", header = TRUE)
x <- model.matrix(aincome ~., baseball_P2)[,-1]
y <- baseball_P2$aincome
set.seed(1)
train = sample(1:nrow(baseball_P2), 20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso2 <- cv.glmnet(x[train,], y[train], alpha = 1)
lasso.prediction2 = predict(cv.lasso2, s = cv.lasso2$lambda.min,
newx = x[test,])
cv.lasso2$lambda.min
cor(lasso.prediction2, ytest)
sqrt((mean(lasso.prediction2 - ytest)^2))
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAB <- function(FA) {
d <- with(FA,
b[1]
+ b[2] * tWAR + b[3] * WAR
+ b[4] * age + b[5] * Pscore
+ b[6] * G + b[9] * R
+ b[10] * X1B + b[11] * X2B
+ b[12] * X3B
+ b[13] * HR
+ b[14] * TB
+ b[16] * SB
+ b[18] * BB + b[19] * HBP
+ b[20] * IBB + b[21] * SO
+ b[22] * GDP + b[24] * SF
+ b[26] * OBP
)
}
b2 = predict(cv.lasso2, type = "coefficients",
s = cv.lasso2$lambda.min)
b2
FAP <- function(FA) {
d <- with(FA,
b2[1]
+ b2[3] * WAR + b2[4] * age + b2[9] * W
)
}
FABat <- FAB(baseball_B1)
FABat
FAPit <- FAP(baseball_P1)
FAPit
library(glmnet)
baseball_B3 <- read.csv("FA1218B3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_B3)[,-1]
y <- baseball_B3$period
set.seed(1)
train = sample(1:nrow(baseball_B3),40)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0.4)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAB2 <- function(FA) {
d <- with(FA,
b[1]
+ b[3] * WAR + b[4] * age + b[5] * Pscore
+ b[7] * PA + b[12] * X3B
+ b[17] * CS + b[18] * BB
+ b[25] * AVG
)
}
FABat2 <- FAB2(baseball_B1)
FABat * round(FABat2)
library(glmnet)
baseball_P3 <- read.csv("FA1218P3.csv", header = TRUE)
x <- model.matrix(period ~., baseball_P3)[,-1]
y <- baseball_P3$period
set.seed(1)
train = sample(1:nrow(baseball_P3),20)
test = (-train)
ytest = y[test]
set.seed(1)
cv.lasso <- cv.glmnet(x[train,], y[train], alpha = 0)
b = predict(cv.lasso, type = "coefficients",
s = cv.lasso$lambda.min)
FAP2 <- function(FA) {
d <- with(FA, b[1] + tWAR * b[2] + WAR * b[3] + age * b[4] + G * b[5] + CG * b[6] + SHO * b[7] + SP * b[8] + W * b[9] + L * b[10] + S * b[11] + H * b[12] + IP * b[13] + R * b[14] + ER * b[15] + PA * b[16] + X1B * b[17] + X2B * b[18] + X3B * b[19] + HR * b[20] + BB * b[21] + IBB * b[22] + HBP * b[23] + SO * b[24] + BK * b[25] + WP * b[26] + ERA * b[27] + FIP * b[28] + WHIP * b[29] + ERA. * b[30] + FIP. * b[31]
)
}
FAPit2 <- FAP2(baseball_P1)
FAPit * round(FAPit2)
